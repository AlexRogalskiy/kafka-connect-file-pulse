<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kafka Connect File Pulse – Connect File Pulse | Source connector for Apache Kafka</title>
    <link>https://streamthoughts.github.io/kafka-connect-file-pulse/</link>
    <description>Recent content in Connect File Pulse | Source connector for Apache Kafka on Kafka Connect File Pulse</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://streamthoughts.github.io/kafka-connect-file-pulse/index.xml" rel="self" type="application/rss+xml" />
    
    
      
      
    
    
    <item>
      <title>Blog: Connect FilePulse 2.4 is Released 🚀</title>
      <link>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/10/04/connect-filepulse-2.4-is-released/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/10/04/connect-filepulse-2.4-is-released/</guid>
      <description>
        
        
        &lt;p&gt;I am pleased to announce the release of Connect FilePulse 2.4. This release brings new built-in expression functions, processing filters as well as some minor improvements and bug fixes.&lt;/p&gt;
&lt;h2 id=&#34;simple-connect-expression-language&#34;&gt;Simple Connect Expression Language&lt;/h2&gt;
&lt;p&gt;This release packs with new built-in functions to enrich the powerful expression language provided by connect FilePulse:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boolean Functions&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;and&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Checks if all of the given conditional expressions are &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Executes &amp;ldquo;&lt;em&gt;greater than operation&lt;/em&gt;&amp;rdquo; on two values and returns &lt;code&gt;true&lt;/code&gt; if the first value is greater than the second value, &lt;code&gt;false&lt;/code&gt;, otherwise.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;if&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Evaluates the given boolean expression and returns one value if &lt;code&gt;true&lt;/code&gt; and another value if &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Executes &amp;ldquo;&lt;em&gt;less than operation&lt;/em&gt;&amp;rdquo; on two values and returns &lt;code&gt;true&lt;/code&gt; if the first value is less than the second value, &lt;code&gt;false&lt;/code&gt;, otherwise.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;not&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Reverses a boolean value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;or&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Checks if at least one of the given conditional expressions is &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Date and time Functions&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timestamp_diff&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Calculates the amount of time between two epoch times in seconds or milliseconds. For more information on &lt;code&gt;unit&lt;/code&gt; see &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/ChronoUnit.html&#34;&gt;ChronoUnit&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;to_timestamp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Parses a given string value and returns the epoch-time in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unix_timestamp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns the current time in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These new functions allows for specifying more complex conditions on configured &lt;a href=&#34;https://streamthoughts.github.io/kafka-connect-file-pulse/docs/developer-guide/filters/&#34;&gt;&lt;em&gt;Processing Filters&lt;/em&gt;&lt;/a&gt;.
For example, we can use them to remove all records retrieved from files that are older than 24 hours.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;filters=DropTooLateFiles
filters.DropTooLateFiles.type=io.streamthoughts.kafka.connect.filepulse.filter.DropFilter
filters.DropTooLateFiles.if=&amp;quot;{{ gt(timestamp_diff(&#39;HOURS&#39;, $metadata.lastModified, unix_timestamp()), 24) }}&amp;quot;
filters.DropTooLateFiles.invert=false
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;xml-processing&#34;&gt;XML Processing&lt;/h1&gt;
&lt;p&gt;XML is still widely used in legacy systems. To ease the integration of this data in Kafka,
this release introduces two new &lt;em&gt;Processing Filters&lt;/em&gt;: &lt;code&gt;XmlToStructFilter&lt;/code&gt; and &lt;code&gt;XmlToJsonFilter&lt;/code&gt; which can be used in addition to the existing &lt;code&gt;XMLFileInputReader&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XmlToStructFilter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This &lt;em&gt;processing filter&lt;/em&gt; can be used to parse and convert an XML file that you read, for example, using the &lt;code&gt;LocalBytesArrayInputReader&lt;/code&gt; into a &lt;code&gt;Struct&lt;/code&gt; record.
This filter should be preferred to the &lt;code&gt;XMLFileInputReader&lt;/code&gt; when you need to deal with invalid XML files.&lt;/p&gt;
&lt;p&gt;For example, you may want to send invalid XML files into specific &lt;em&gt;Dead Letter Topic&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;filters=ParseXmlDocument
filters.ParseXmlDocument.type=io.streamthoughts.kafka.connect.filepulse.filter.XmlToStructFilter
filters.ParseXmlDocument.source=message
filters.ParseXmlDocument.xml.parser.validating.enabled=true
filters.ParseXmlDocument.xml.parser.namespace.aware.enabled=true
filters.ParseXmlDocument.xml.exclude.empty.elements=true
filters.ParseXmlDocument.xml.exclude.node.attributes=false
filters.ParseXmlDocument.xml.data.type.inference.enabled=true
filters.ParseXmlDocument.withOnFailure=SetToErrorTopic
filters.SetToErrorTopic.type=io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter
filters.SetToErrorTopic.value=xml-parsing-DLQ
filters.SetToErrorTopic.field=$topic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;XmlToJsonFilter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This &lt;em&gt;processing filter&lt;/em&gt; can be used to parse and convert an XML file that you read, for example, using the &lt;code&gt;LocalBytesArrayInputReader&lt;/code&gt; into a JSON string record.&lt;/p&gt;
&lt;h1 id=&#34;exception-context&#34;&gt;Exception Context&lt;/h1&gt;
&lt;p&gt;When an exception occurs in the &lt;em&gt;processing filter chain&lt;/em&gt;, Connect FilePulse allows you to access the context of the exception using the &lt;code&gt;$error&lt;/code&gt; scope from the expression language.
In previous versions, only the exception message was available (e.g., using &lt;code&gt;$error.message&lt;/code&gt;). Now, you can retrieve the exception stacktrace as well as the exception class name using:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$error.exceptionMessage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$error.exceptionStacktrace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$error.exceptionClassName&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The below examples shows how to add the exception information to teh record headers.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;...
filters.ParseXmlDocument.withOnFailure=SetToErrorTopic,AppendErrorMessageToHeader,AppendErrorStacktraceToHeader,AppendErrorClassNameToHeader
filters.AppendErrorMessageToHeader.type=io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter
filters.AppendErrorMessageToHeader.field=$headers.errors.exception.message
filters.AppendErrorMessageToHeader.value={{ $error.exceptionMessage }}
filters.AppendErrorStacktraceToHeader.type=io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter
filters.AppendErrorStacktraceToHeader.field=$headers.errors.exception.stacktrace
filters.AppendErrorStacktraceToHeader.value={{ $error.exceptionStacktrace }}
filters.AppendErrorClassNameToHeader.type=io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter
filters.AppendErrorClassNameToHeader.field=$headers.errors.exception.message
filters.AppendErrorClassNameToHeader.value={{ $error.exceptionClassName }}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;full-release-notes&#34;&gt;Full Release Notes&lt;/h2&gt;
&lt;p&gt;Connect File Pulse 2.4 can be downloaded from the &lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/releases/tag/v2.4.0&#34;&gt;GitHub Releases Page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/67683d5&#34;&gt;67683d5&lt;/a&gt; feat(expression): add built-in SCeL expression function NOT&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7fea775&#34;&gt;7fea775&lt;/a&gt; feat(dataformat): add config to specify a prefix used to prepend XML attributes (#176)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/4fc2cb9&#34;&gt;4fc2cb9&lt;/a&gt; feat(expression): add expression function TimestampDiff&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/9d72e47&#34;&gt;9d72e47&lt;/a&gt; feat(expression): add expression function ToTimestamp&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/0644cb9&#34;&gt;0644cb9&lt;/a&gt; feat(expressions): add built-in function &amp;lsquo;gt&amp;rsquo; and &amp;lsquo;lt&amp;rsquo; to ScEL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/e4375c8&#34;&gt;e4375c8&lt;/a&gt; feat(expressions): add built-in function &amp;lsquo;or&amp;rsquo; and &amp;lsquo;and&amp;rsquo; to ScEL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/28a6126&#34;&gt;28a6126&lt;/a&gt; feat(expressions): add built-in function &amp;lsquo;if&amp;rsquo; to ScEL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/4fe77fd&#34;&gt;4fe77fd&lt;/a&gt; feat(api): add access to error stacktrace in filter chain&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/b9c0a40&#34;&gt;b9c0a40&lt;/a&gt; feat(dataformat): add new config prop to exclude node attributes in namespaces (#175)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/8f648c8&#34;&gt;8f648c8&lt;/a&gt; feat(dataformat): add new config props to exclude all XML attributes (#174)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/355b6e4&#34;&gt;355b6e4&lt;/a&gt; feat(expression): add UnixTimestamp expression function&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/5a62f03&#34;&gt;5a62f03&lt;/a&gt; feat(filters): add new XmlToStructFilter&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/9cad2fa&#34;&gt;9cad2fa&lt;/a&gt; feat(filters): add new simple XmlToJsonFilter&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/0e29ce2&#34;&gt;0e29ce2&lt;/a&gt; feat(plugin): add capability to merge schemas deriving from records&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;improvements--bugfixes&#34;&gt;Improvements &amp;amp; Bugfixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/165a908&#34;&gt;165a908&lt;/a&gt; refactor(expressions): allow functions to not evaluate all expression args&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/4e9f84d&#34;&gt;4e9f84d&lt;/a&gt; fix(expressions): fix equals SCeL expression should support null argument (#187)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7bdc787&#34;&gt;7bdc787&lt;/a&gt; fix(filesystems): fix regression on AmazonS3Client configuration (#184)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/d76bac0&#34;&gt;d76bac0&lt;/a&gt; fix(plugin): refactor InMemoryFileObjectStateBackingStore to use an LRU cache (#183)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/50200f7&#34;&gt;50200f7&lt;/a&gt; fix(plugin): fix resources must not be closed while files are not committed&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/17e9efb&#34;&gt;17e9efb&lt;/a&gt; fix(plugin): fix regression cleanup object files should not be rescheduled (#178)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/e2f74b2&#34;&gt;e2f74b2&lt;/a&gt; fix(api): fix schemas should be merged per target topic&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/03bab9a&#34;&gt;03bab9a&lt;/a&gt; fix(api): enhance mapping to connect schema to handle duplicate schema&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/760d98b&#34;&gt;760d98b&lt;/a&gt; fix(filters): XmlToJson should support bytes input&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/99c374f&#34;&gt;99c374f&lt;/a&gt; fix(api): fix schema behavior on array merge&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;subtasks&#34;&gt;Sub-Tasks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/e9cd483&#34;&gt;e9cd483&lt;/a&gt; fix(build): normalize artefact-ids&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/2b8d260&#34;&gt;2b8d260&lt;/a&gt; refactor(filters): relocate json packages&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/4d13731&#34;&gt;4d13731&lt;/a&gt; refactor(filters): cleanup classes&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/f3179a7&#34;&gt;f3179a7&lt;/a&gt; refactor(expression): refactor expression function api&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/bf3fc31&#34;&gt;bf3fc31&lt;/a&gt; refactor(expression): reorganize packages for built-in functions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;docs&#34;&gt;Docs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/643469f&#34;&gt;643469f&lt;/a&gt; site(docs): update documentations&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/be29aae&#34;&gt;be29aae&lt;/a&gt; docs(site): add new function descriptions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/2a9a119&#34;&gt;2a9a119&lt;/a&gt; docs(site): fix missing config property&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7533d2f&#34;&gt;7533d2f&lt;/a&gt; docs(site): improve installation guide&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/71a9ebe&#34;&gt;71a9ebe&lt;/a&gt; docs(site): add doc for defining schema&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you enjoyed reading this post, check out Connect FilePulse at GitHub and give us a ⭐!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Connect FilePulse 2.3 is Released 🚀</title>
      <link>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/09/05/connect-filepulse-2.3-is-released/</link>
      <pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/09/05/connect-filepulse-2.3-is-released/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;This new release brings new capabilities and several bug fixes and improvements that make ConnectFilePulse still the more powerful Kafka Connect-based solution for processing files.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;full-release-notes&#34;&gt;Full Release Notes&lt;/h2&gt;
&lt;p&gt;Connect File Pulse 2.3 can be downloaded from the &lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/releases/tag/v2.3.0&#34;&gt;GitHub Releases Page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;new-features&#34;&gt;New Features&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/3da6a5b&#34;&gt;3da6a5b&lt;/a&gt; feat(filesystems): add the capability to configure alternative AWS S3 endpoint (#172)
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/608d1c2&#34;&gt;608d1c2&lt;/a&gt; feat(plugin): add new prop to cleanup on offset commit
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/f6b443a&#34;&gt;f6b443a&lt;/a&gt; feat(api): allow to configure a record-value schema
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/befbc6f&#34;&gt;befbc6f&lt;/a&gt; feat(filters): add new NullValueFilter (#169)
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/d86804b&#34;&gt;d86804b&lt;/a&gt; feat(plugin): add new config tasks.empty.poll.wait.ms
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/39c37d9&#34;&gt;39c37d9&lt;/a&gt; feat(plugin): add new prop to configure if task should halt on error (#164)
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7c219b8&#34;&gt;7c219b8&lt;/a&gt; feat(filesystems/api): enhance XMLFileInputReader to support data type inference (#163)&lt;/p&gt;
&lt;h3 id=&#34;improvements--bugfixes&#34;&gt;Improvements &amp;amp; Bugfixes&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/5314e20&#34;&gt;5314e20&lt;/a&gt; fix(filters): DelimtedRowFileInputFilter should compute schema for each record (#171)
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/816f48a&#34;&gt;816f48a&lt;/a&gt; fix(filters): fix AppendFilter to set record-value to null (#167)
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/d2e776b&#34;&gt;d2e776b&lt;/a&gt; fix(api): fix connector should accept nullable record-cord (#170)
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/2266fc1&#34;&gt;2266fc1&lt;/a&gt; fix(expression): fix SCEL expression null&lt;/p&gt;
&lt;h3 id=&#34;docs&#34;&gt;Docs&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/20983dd&#34;&gt;20983dd&lt;/a&gt; docs(site): fix documentation typos on metadata access (#165)
&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/4eef25f&#34;&gt;4eef25f&lt;/a&gt; docs(site): add missing config prop&lt;/p&gt;
&lt;p&gt;If you enjoyed reading this post, check out Connect FilePulse at GitHub and give us a ⭐!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Connect FilePulse 2.2 is Released 🚀</title>
      <link>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/08/10/connect-filepulse-2.2-is-released/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/08/10/connect-filepulse-2.2-is-released/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;This new release brings new capabilities and several bug fixes and improvements that make ConnectFilePulse still the more powerful Kafka Connect-based solution for processing files.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;support-for-filelisting-process-delegation&#34;&gt;Support for file-listing process delegation&lt;/h2&gt;
&lt;p&gt;From the very beginning, Connect FilePulse was designed differently from most other Kafka connectors used for file processing.
For example, we chose to use a single thread called the `FileSystemMonitorThread, managed by the connector instance, to scan the files to be processed and to apply the configured file cleanup policy.
Then, when new files are detected on the file system, the connector instance triggers a task reconfiguration to distribute the files to be processed among the tasks.&lt;/p&gt;
&lt;p&gt;Although this design offers many advantages it also brings some limitations that may make the connector less suitable for some scenarios,
such as processing a very large number of small files that would be created quickly on the file system.&lt;/p&gt;
&lt;p&gt;This limitation is mainly due to the fact that every time a task reconfiguration is triggered,
Kafka Connect needs to stop and restart all tasks of our connector using the internal Kafka rebalance protocol.
Thus, the connector may have some scalability issues if it is necessary to reconfigure tasks every second because new files have been created on the local filesystem.&lt;/p&gt;
&lt;p&gt;To support such a scenario, Connect FilePulse 2.2.0 brings a new feature to delegate the file listing process to the connector&#39;s tasks
This new feature can be enabled by setting the connector&#39;s property &lt;code&gt;fs.listing.task.delegation.enabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When enabled, each task will scan the filesystem using the &lt;code&gt;fs.listing.class&lt;/code&gt; passed through the connector&#39;s configuration.
In addition, a dedicated &lt;code&gt;TaskPartitioner&lt;/code&gt; is used to partition each file to a single task using the murmur2 hash algorithm.
Finally, the cleanup policy passed through the connector&#39;s configuration is still executed by the &lt;code&gt;FileSystemMonitorThread&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;taskpartitioner&#34;&gt;TaskPartitioner&lt;/h2&gt;
&lt;p&gt;Additionally, Connect FilePulse 2.2.0 introduces a new pluggable interface called &lt;code&gt;TaskPartitioner&lt;/code&gt; used to partition files among the connector&#39;s tasks.
The connector ships with two built-in implementations: the &lt;code&gt;DefaultTaskPartitioner&lt;/code&gt; that spreads files evenly among the tasks and the &lt;code&gt;HashByURITaskPartitioner&lt;/code&gt; that partitions each file based on its URI.&lt;/p&gt;
&lt;h2 id=&#34;improved-support-for-xml&#34;&gt;Improved support for XML&lt;/h2&gt;
&lt;p&gt;Connect FilePulse 2.2.0 adds various improvements for XML support.
So now, when using Connect FilePulse with the &lt;code&gt;LocalXMLFileInputReader&lt;/code&gt; you can enable the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reader.xml.parser.validating.enabled=true&lt;/code&gt;: To specify that the XML parser should validate documents as they are parsed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader.xml.parser.namespace.aware.enabled=true&lt;/code&gt;: To specify that the XML parser should provide support for XML namespaces.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader.xml.exclude.empty.elements&lt;/code&gt;: To specify that the reader should automatically exclude elements having no field.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Furthermore, dynamic schema resolution has been improved when processing complex XML documents and more especially when handling documents with elements containing arrays.&lt;/p&gt;
&lt;h2 id=&#34;improved-lastmodifiedfilelistfilter&#34;&gt;Improved LastModifiedFileListFilter&lt;/h2&gt;
&lt;p&gt;Finally, this new release enhances the &lt;code&gt;LastModifiedFileListFilter&lt;/code&gt; to allow configuring the maximum age in milliseconds of a file to be eligible for processing.
For this, you can use the new connector&#39;s configuration property: &lt;code&gt;file.filter.maximum.age.ms&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;full-release-notes&#34;&gt;Full Release Notes&lt;/h2&gt;
&lt;p&gt;Connect File Pulse 2.2 can be downloaded from the &lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/releases/tag/v2.2.0&#34;&gt;GitHub Releases Page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;new-features&#34;&gt;New Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/5bc2024&#34;&gt;5bc2024&lt;/a&gt; feat(plugin): allow excluding from processing files based on maximum age in ms (#161)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/a3ef5db&#34;&gt;a3ef5db&lt;/a&gt; feat(filesystems): improve XMLFileInputIterator to allow excluding empty element (#159)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/b00ef42&#34;&gt;b00ef42&lt;/a&gt; feat(scripts): add arg to specify number of connect workers&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/ef8fbc3&#34;&gt;ef8fbc3&lt;/a&gt; feat(plugin): add support for task file listing delegation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/137c1a6&#34;&gt;137c1a6&lt;/a&gt; feat(filesystems): enhance XMLFileInputIterator with new config props&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;improvements--bugfixes&#34;&gt;Improvements &amp;amp; Bugfixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/a693b52&#34;&gt;a693b52&lt;/a&gt; fix(plugin): fix FilePulseSourceConnector should raise an error when FileSystemMonitorThread crash&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/c6f1f13&#34;&gt;c6f1f13&lt;/a&gt; fix(api): fix empty document removing in XMLFileInputIterator&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/c0cc249&#34;&gt;c0cc249&lt;/a&gt; fix(api): improve support for XML by adding capabilities to merge schemas (#160)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;docs&#34;&gt;Docs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/0c92901&#34;&gt;0c92901&lt;/a&gt; docs(site): fix page date and css&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7000b84&#34;&gt;7000b84&lt;/a&gt; docs(site): add release note for 2.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;subtasks&#34;&gt;Sub-Tasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/4f0add2&#34;&gt;4f0add2&lt;/a&gt; project(issue): add github stale bot config&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/34ab52a&#34;&gt;34ab52a&lt;/a&gt; fix(scripts): update docker-compose for debug&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/a2fb4a5&#34;&gt;a2fb4a5&lt;/a&gt; sub-task(plugin): add new interface TaskPartitioner&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/bbeebda&#34;&gt;bbeebda&lt;/a&gt; subtask(plugin): add new interface FileURIProvider&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/e2825c0&#34;&gt;e2825c0&lt;/a&gt; build(deps): bump commons-compress from 1.20 to 1.21&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you enjoyed reading this post, check out Connect FilePulse at GitHub and give us a ⭐!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Connect FilePulse 2.1 is Available 🚀</title>
      <link>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/08/04/connect-filepulse-2.1-is-available/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/08/04/connect-filepulse-2.1-is-available/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;This new release contains a number of bug fixes and improvements that make ConnectFilePulse more stable and resilient in production.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;full-release-notes&#34;&gt;Full Release Notes&lt;/h2&gt;
&lt;p&gt;Connect File Pulse 2.1 can be downloaded from the &lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/releases/tag/v2.1.0&#34;&gt;GitHub Releases Page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;improvements--bugfixes&#34;&gt;Improvements &amp;amp; Bugfixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/f1c071e&#34;&gt;f1c071e&lt;/a&gt; refactor(plugin): change default value of &lt;code&gt;offset.attributes.string&lt;/code&gt; to uri (#154)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/d8aac2b&#34;&gt;d8aac2b&lt;/a&gt; refactor(plugin): enhance error handling when file do not exist anymore&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/8a17051&#34;&gt;8a17051&lt;/a&gt; fix(plugin): fix ClassCastException when offset.attributes.string=inode (#153)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/defee21&#34;&gt;defee21&lt;/a&gt; fix(plugin): remove duplicate log when closing file iterator&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7897bcb&#34;&gt;7897bcb&lt;/a&gt; fix(plugin): improve DefaultFileSystemMonitor to avoid scheduling files that may be cleanup by remaining tasks (#152)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/28456db&#34;&gt;28456db&lt;/a&gt; fix(plugin): fix task must close resources on error while starting&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/ddf8b86&#34;&gt;ddf8b86&lt;/a&gt; fix(api): fix DeadLock on KafkaStateBackingStore&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/370a1d6&#34;&gt;370a1d6&lt;/a&gt; fix(filesystems): fix FileSystemMonitorThread should not fail if file metadata cannot be retrieved (#150)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/e9462c8&#34;&gt;e9462c8&lt;/a&gt; fix(plugin): fix NPE using version 2.0 with KafkaFileObjectStateBackingStore (#149)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;docs&#34;&gt;Docs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/1b72a96&#34;&gt;1b72a96&lt;/a&gt; docs(site): fix syntax for &amp;lsquo;exists&amp;rsquo; ScEL Built-in Function (#148)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7da7e41&#34;&gt;7da7e41&lt;/a&gt; docs(site): fix documentation error for StateBackingStore (#147)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;subtasks&#34;&gt;Sub-Tasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/ec70611&#34;&gt;ec70611&lt;/a&gt; build(deps): bump commons-io from 2.5 to 2.7&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/aa62022&#34;&gt;aa62022&lt;/a&gt; fix(script): fix docker-compose for debugging&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/2723516&#34;&gt;2723516&lt;/a&gt; refactor(build): add mvn profiles for different storages&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/c1da2f8&#34;&gt;c1da2f8&lt;/a&gt; refactor(build): improve makefile and add utility script for debugging&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/54ba1e5&#34;&gt;54ba1e5&lt;/a&gt; build(maven): add meta info&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you enjoyed reading this post, check out Connect FilePulse at GitHub and give us a ⭐!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Connect FilePulse 2.0 is Available 🚀</title>
      <link>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/06/10/connect-filepulse-2.0-is-available/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/kafka-connect-file-pulse/blog/2021/06/10/connect-filepulse-2.0-is-available/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Connect FilePulse 2.0 is finally here! Here is an overview of what is new:&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;supported-cloud-storage&#34;&gt;Supported Cloud Storage&lt;/h2&gt;
&lt;p&gt;Previously, Connect FilePulse was designed to provide direct integration between legacy systems and Apache Kafka.
But, it could be only used to process and integrate data records from the local filesystem on which the connector was deployed.&lt;/p&gt;
&lt;p&gt;As more and more organizations move from on-premises to cloud infrastructure, we&#39;ve seen a growing demand from developers for the connector to support cloud storage.&lt;/p&gt;
&lt;p&gt;Connect FilePulse 2.0 brings you the capabilities for reading files across different storage systems.
Using a single Kafka Connect Source Connector you can now read files from the local filesystem, Amazon S3, Azure Blob Storage and Google Cloud Storage.&lt;/p&gt;
&lt;p&gt;In addition, the connector supports a variety of formats equally for all storage systems, e.g., text files, CSV, XML, JSON, Avro, etc.
At the same time, you can still benefit from the powerful &lt;a href=&#34;https://streamthoughts.github.io/kafka-connect-file-pulse/kafka-connect-file-pulse/docs/developer-guide/filters-chain-definition/&#34;&gt;processing-filters&lt;/a&gt; mechanism of Connect FilePulse to process data records as they are read by the connector.&lt;/p&gt;
&lt;p&gt;For example, here is the configuration for reading CSV object files from an Amazon S3 bucket.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;name=connect-file-pulse-amazon-s3-csv
connector.class=io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector
topic=connect-filepulse-csv-data-records
tasks.max=1

fs.listing.class=io.streamthoughts.kafka.connect.filepulse.fs.AmazonS3FileSystemListing
fs.listing.interval.ms=10000
fs.listing.filters=io.streamthoughts.kafka.connect.filepulse.scanner.local.filter.RegexFileListFilter
file.filter.regex.pattern=.*\\.csv$

fs.cleanup.policy.class=io.streamthoughts.kafka.connect.filepulse.clean.LogCleanupPolicy

aws.access.key.id=xxxxxxxxx
aws.secret.access.key=xxxxxxxxx
aws.s3.region=eu-west-3
aws.s3.bucket.name=connect-filepulse

tasks.reader.class=io.streamthoughts.kafka.connect.filepulse.fs.reader.AmazonS3RowFileInputReader

skip.headers=1
offset.attributes.string=uri

filters=ParseLine
filters.ParseLine.type=io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter
filters.ParseLine.extractColumnName=headers
filters.ParseLine.trimColumn=true
filters.ParseLine.separator=;
tasks.file.status.storage.bootstrap.servers=kafka101:9092
tasks.file.status.storage.topic=connect-file-pulse-status
tasks.file.status.storage.topic.partitions=10
tasks.file.status.storage.topic.replication.factor=1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;autocreate-internal-topic&#34;&gt;Auto-create Internal Topic&lt;/h2&gt;
&lt;p&gt;By default, Connect FilePulse uses the internal topic &lt;code&gt;connect-file-pulse-status&lt;/code&gt; to track the current state of each file
being scheduled and processed by tasks. This allows you to deploy Connect FilePulse is a distributed Kafka Connect cluster with each worker only processing a subset of files.&lt;/p&gt;
&lt;p&gt;In version 2.0, this topic is will be automatically created by the connector if it doesn&#39;t already exist. You can configure the number of partitions, as well as, the replication factor of this topic using the
new properties &lt;code&gt;tasks.file.status.storage.topic.partitions&lt;/code&gt; and &lt;code&gt;tasks.file.status.storage.topic.replication.factor&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;inmemoryfileobjectstatebackingstore&#34;&gt;InMemoryFileObjectStateBackingStore&lt;/h2&gt;
&lt;p&gt;In version 2.0, we provide a new property &lt;code&gt;tasks.file.status.storage.class&lt;/code&gt; that can be used to specify the class implementing the &lt;code&gt;FileObjectStateBackingStore&lt;/code&gt; interface
to be used for storing the status of each file. By default, Connect FilePulse uses the kafka-based implementation called &lt;code&gt;i.s.k.c.f.state.KafkaFileObjectStateBackingStore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;But, in some context, it may be not necessary to deploy Connect FilePulse in distributed mode and this implementation can lead to additional costs if, for example, you are using a fully-managed Apache Kafka service.
So now, we also provide the &lt;code&gt;i.s.k.c.f.state.InMemoryFileObjectStateBackingStore&lt;/code&gt; implementation to only keep file status in-memory.&lt;/p&gt;
&lt;h2 id=&#34;improved-scalability&#34;&gt;Improved Scalability&lt;/h2&gt;
&lt;p&gt;Connect FilePulse can be used to integrate a very large number of files in parallel.
Unfortunately, too many files to process can result in a too-large message to produce in Kafka for configuring tasks (i.e. &lt;code&gt;connect-config&lt;/code&gt;).
To solve this blocking issue, in version 2.0, we have added the new property &lt;code&gt;max.scheduled.files&lt;/code&gt; to limit the maximum number of files that can be scheduled at the same time (Default is &lt;code&gt;1000&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&#34;improved-grok-expression&#34;&gt;Improved Grok Expression&lt;/h2&gt;
&lt;p&gt;In a previous version, Connect FilePulse has brought the support for Grok expressions to parse data.
Since this mechanism has been migrated to a new dedicated project &lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-transform-grok&#34;&gt;kafka-connect-transform-grok&lt;/a&gt; in order to be able to use Grok expressions with Kafka Connect&#39;s a SMTs.
Now, Connect FilePulse directly depends on that project to provide the &lt;code&gt;GrokFilter&lt;/code&gt; with a unified configuration.&lt;/p&gt;
&lt;h2 id=&#34;full-release-notes&#34;&gt;Full Release Notes&lt;/h2&gt;
&lt;p&gt;Connect File Pulse 2.0 can be downloaded from the &lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/releases/tag/v2.0.0&#34;&gt;GitHub Releases Page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Members of the open-source community who appear in these release notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@at0dd&lt;/li&gt;
&lt;li&gt;@qgeffard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you for your valuable contributions!&lt;/p&gt;
&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/13eed7b&#34;&gt;13eed7b&lt;/a&gt; feat(plugin): add support for auto-creating the internal topic used by ConnectFilePulse (#139)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/5c88877&#34;&gt;5c88877&lt;/a&gt; feat(plugin): add InMemoryStateBackingStore for tracking status of file objects (#138)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/52adca9&#34;&gt;52adca9&lt;/a&gt; feat(filesystems): add support for Google Cloud Storage (#121)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7b49b81&#34;&gt;7b49b81&lt;/a&gt; feat(plugin): add new property max.scheduled.files (#122) (#123)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/390ad82&#34;&gt;390ad82&lt;/a&gt; feat(filesystems): add support for AWS S3 (#111)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/92e3341&#34;&gt;92e3341&lt;/a&gt; feat(filesystems): add support for Azure Blob Storage (#112)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/685618a&#34;&gt;685618a&lt;/a&gt; refactor(filters): migrate GrokFilter to use classes from grok-transformer (#118)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;improvements--bugfixes&#34;&gt;Improvements &amp;amp; Bugfixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/6ef5162&#34;&gt;6ef5162&lt;/a&gt; fix(api): fix decimal numbers not being correctly parsed (#142)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/6c779af&#34;&gt;6c779af&lt;/a&gt; refactor(filesystems): make cleanup policy storage aware&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/d13c236&#34;&gt;d13c236&lt;/a&gt; fix(filesystems): make compression codec more robust to encoding&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/7d2ddac&#34;&gt;7d2ddac&lt;/a&gt; docs(site): fix DateFilter formats config&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/e222414&#34;&gt;e222414&lt;/a&gt; fix(api): change digest value to string&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;subtasks&#34;&gt;SubTasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/1658d35&#34;&gt;1658d35&lt;/a&gt; refactor(api/filesystems): move FileInputIterator implementation to commons-fs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/06385b3&#34;&gt;06385b3&lt;/a&gt; refactor(filesystems): add module filepulse-commons-fs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/57da04c&#34;&gt;57da04c&lt;/a&gt; subtask(all): refactor FilePulse API to support remote storages (#100)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/ee4acad&#34;&gt;ee4acad&lt;/a&gt; add github workflow&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/a3eb908&#34;&gt;a3eb908&lt;/a&gt; build(all): update to java 11&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/kafka-connect-file-pulse/commit/98eb51f&#34;&gt;98eb51f&lt;/a&gt; build(mvn): add maven-wrapper&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;braking-changes&#34;&gt;Braking changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Configurations for Connect FilePulse 1.x  is not compatible with the version 2.x.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you enjoyed reading this post, check out Connect FilePulse at GitHub and give us a ⭐!&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
